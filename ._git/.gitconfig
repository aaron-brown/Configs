[color]
    ui = auto

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[color]
    ui = true

[color "diff"]
    whitespace = red reverse

[core]
    whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
	eol = lf
	editor = vim

[branch "master"]
        remote = origin
        merge = refs/heads/master

[alias]

    # Remove all cached files (DESTRUCTIVE TO REPO).
    rmcacheall = rm --cache -r .

    # Remove a cached file (DESTRUCTIVE TO REPO).
    rmcache = rm --cache -r

    # Quickly add a remote upstream <link>
    uadd = remote add upstream

    # Quickly pull from upstream <branch>
    upull = pull upstream

    # Quickly pull from upstream master
    umpull = pull upstream master

    # Quickly pull from origin
    opull = pull origin

    # Checkout a branch
    co = checkout

    # Checkout the master branch.
    com = checkout master

    # Create a branch.
    cob = checkout -b

    # Remove a branch.
    rmb = branch -D

    # Move / Rename a Branch
    mvb = branch --move

    # Remove a branch from origin (DESTRUCTIVE TO GITHUB).
    ormb = push origin --delete

    # Rebase off of master.
    mbison = rebase master

    # No fast-forward merge.
    noffm = merge --no-ff

    # Push to origin (my be redundant if tracking).
    opush = push origin

    # Use the force, Luke.
    fpush = push --force

    # Fuuuuus... ROH DAH!
    fusrohdah = push --force

    # Track push.
    trapush = push -u origin

    # Get Status
    stat = status

    # Commit (message in Text Editor)
    mit = commit

    # Commit (inline message)
    mitm = commit -m

    br = branch
    df = diff
    dc = diff --cached
    lg = log -p
    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
    ls = ls-files
    # Show files ignored by git:
    ign = ls-files -o -i --exclude-standard

[pushd]
	default = simple
[push]
	default = current
